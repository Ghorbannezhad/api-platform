version: '3.8'

networks:
  api-platform-network:

services:

  # nignx
  nginx-service:
      image: nginx:stable-alpine
      container_name: nginx-container
      ports:
        - "8090:80"
      env_file:
        - ./app/.env
      volumes:
        - ./app:/var/www/project
        - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      depends_on:
        - php82-service
        - postgres16-service
      networks:
        - api-platform-network
  # php
  php82-service:
      build:
        context: .
        dockerfile: ./php/Dockerfile
      container_name: php82-container
      ports:
        - "9000:9000"
      env_file:
        - ./app/.env
      volumes:
        - ./app:/var/www/project
      networks:
        - api-platform-network

  # postgres
  postgres16-service:
    image: postgres:16-alpine
    container_name: postgres16-container-db
    restart: always
    env_file:
      - ./app/.env
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    volumes:
        - ./database_data:/var/lib/postgresql/data:rw
    ports:
      - "${POSTGRES_PORT:-5452}:5432"
    networks:
      - api-platform-network

  # node
  node-service:
    image: node:latest
    container_name: node-container
    env_file:
      - ./app/.env
    volumes:
      - ./app:/var/www/project
    working_dir: /var/www/project
    networks:
      - api-platform-network